#!/usr/bin/perl
#

use strict;
use OSCAR::Utils;
use OSCAR::FileUtils;
use OSCAR::Defs;
use File::Basename;
use File::Path;
use Carp;

my $tarball_url = "http://www.csm.ornl.gov/srt/downloads/oscar/ganglia-3.0.6.tar.gz";
my $filename = File::Basename::basename ($tarball_url);
my $dir = File::Basename::basename($tarball_url,  ".tar.gz");
my $dest = "/tmp";

# As parameter, the user must specify "rpm" or "deb" to know which binary
# package format should be used.
my $package_type = shift;

sub build_deb_pkgs () {
    print "Copying Debian scripts...\n";
    my $cmd = "cp -rf debian $dest/$dir";
    if (system ($cmd)) {
        carp "ERROR: Impossible to execute $cmd";
        return -1;
    }

    print "Creating the Debian package...\n";
    $cmd = "cd $dest/$dir && dpkg-buildpackage -rfakeroot -us -uc";
    if (system ($cmd)) {
        carp "ERROR: Impossible to execute $cmd";
        return -1;
    }
    
    return 0;
}

sub build_rpm_pkgs () {
    carp "ERROR: Not yet implemented";
    return -1;
}


if (!OSCAR::Utils::is_a_valid_string ($package_type)
    || ($package_type ne "rpm" && $package_type ne "deb")) {
    die "ERROR: you must specify \"rpm\" or \"deb\", so we can know what ".
        "kind of binary packages you want to create";
}

print "Creation $package_type packages...\n";

# First we download the source tarball
OSCAR::FileUtils::download_file ($tarball_url,
                                 $dest,
                                 "wget",
                                 OSCAR::Defs::NO_OVERWRITE());

# Doing some clean-up
File::Path::rmtree ("$dest/$dir");

# We untar the tarball
print "Untaring $dest/$filename...\n";
my $cmd = "cd $dest; tar xzf $filename";
if (system($cmd)) {
    die "ERROR: Impossible to execute $cmd";
}

if ($package_type eq "deb") {
    build_deb_pkgs ();
} elsif ($package_type eq "rpm") {
    build_rpm_pkgs ();
} else {
    die "ERROR: Unknown package type ($package_type)"
}

exit 0;

