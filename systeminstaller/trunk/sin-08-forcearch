--- lib/SystemInstaller/Package/UpdateRpms.pm.old	2005-07-13 18:45:40.000000000 +0200
+++ lib/SystemInstaller/Package/UpdateRpms.pm	2005-07-13 18:47:56.000000000 +0200
@@ -71,9 +71,16 @@
         my %files;
         #my $cmd = "update-rpms --root=none --cache=u --list ";
         my $cmd = "update-rpms --root=none --cache=u --check ";
-        $cmd .= join " ", @pkglist;
-        if( open( CMD, $cmd."|" ) ) {
-                my @missing;
+
+	#EF# check for forced architecture packages
+	#EF# they are named $pkg:$arch in the rpm list
+	
+	my ($nfarch, $forced) = sep_forced_arch(@pkglist);
+
+	# first deal with the normal (not-forced arch) packages
+	my ($ret, @missing);
+        my $runcmd = $cmd . join " ", @{$nfarch};
+        if( open( CMD, $runcmd."|" ) ) {
                 while (<CMD>) {
                         chomp;
                         my @items = split /\t/;
@@ -85,11 +92,36 @@
                         }
                 }
                 close CMD;
-                if( $? || @missing ) {
-                    carp("ERROR: The following RPMs cannot be installed:\n ".join( "\n ",@missing )."\n\n" );
-                    return;
-                }
-        }
+		$ret = $?;
+	}
+
+	for my $farch (keys %{$forced}) {
+		print "Forced packages for $farch: " .
+		    join(" ",@{$forced->{$farch}}) . "\n";
+		$runcmd = $cmd . "--arch $farch " .
+		    join(" ",@{$forced->{$farch}});
+		if( open( CMD, $runcmd."|" ) ) {
+		    while (<CMD>) {
+                        chomp;
+                        my @items = split /\t/;
+                        $items[2] =~ /([^\/]+)$/;
+                        my $rpm = $1;
+                        if( $items[3] =~ /UNKNOWN/ ) {
+                           push @missing, "$rpm: $items[3]";
+                        } else {
+			    $files{$items[1].":".$farch} = $rpm;
+                        }
+		    }
+		    close CMD;
+		    $ret ||= $ret;
+		}
+	}
+		
+
+	if( $ret || @missing ) {
+           carp("ERROR: The following RPMs cannot be installed:\n ".join( "\n ",@missing )."\n\n" );
+	    return;
+	}
         unless (%files) {
                 carp("Couldn't select any files.");
                 return;
@@ -315,6 +346,25 @@
 
 } #find_imgroot
 
+# separate non-forced from forced architecture packages
+
+sub sep_forced_arch {
+    my @pkglist = @_;
+    my (@nfarch, %forced);
+    @nfarch = grep !/:/, @pkglist;
+
+    my @tmp = grep /:/, @pkglist;
+    foreach (@tmp) {
+	my ($pkg, $arch) = split /:/;
+	if ($forced{$arch}) {
+	    push @{$forced{$arch}}, $pkg;
+	} else {
+	    $forced{$arch} = [$pkg];
+	}
+    }
+    return (\@nfarch, \%forced);
+}
+
 ### POD from here down
 
 =head1 NAME
