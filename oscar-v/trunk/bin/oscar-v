#!/usr/bin/env perl
#

#
# Copyright (c) 2007-2008 Oak Ridge National Laboratory.
#                         Geoffroy R. Vallee <valleegr@ornl.gov>
#                         All rights reserved.
#
# This file is part of the OSCAR software package.  For license
# information, see the COPYING file in the top level directory of the
# OSCAR source distribution.
#

#
# $Id$
#

use strict;
use Cwd qw(chdir cwd);
use Getopt::Long;
use OSCAR::Utils;
use OSCAR::Logger;
use OSCAR::VirtualCluster;
use warnings "all";

BEGIN {
    if (defined $ENV{OSCAR_HOME}) {
        unshift @INC, "$ENV{OSCAR_HOME}/lib";
    }
}

my ($add_image, $add, $remove, $update, $mac, $distro, $deploy, $hostos,
    $techno, $list_images, $verbose);

GetOptions(
        "add-image=s"                   => \$add_image,
        "add-vm=s"                      => \$add,
        "remove-vm=s"                   => \$remove,
        "update-vm=s"                   => \$update,
        "deploy-vm"                     => \$deploy,
        "mac=s"                         => \$mac,
        "distro=s"                      => \$distro,
        "hostos=s"                      => \$hostos,
        "list-images"                   => \$list_images,
        "techno=s"                      => \$techno,
        "help"                          => \&help_and_exit_success,
        "verbose"                       => \$verbose,
        ) || help_and_exit();

#
# First we do some sanity checking...
#
my $actions = 0;
$actions++ if (defined $add_image);
$actions++ if (defined $add);
$actions++ if (defined $remove);
$actions++ if (defined $update);
$actions++ if (defined $deploy);
$actions++ if (defined $list_images);
if ($actions != 1) {
    die "ERROR: Invalid number of actions ($actions)";
}

if (defined $add_image && !is_a_valid_string ($distro)) {
    die "ERROR: Invalid argument for the addition of a new VM";
}

if (defined $update && (!is_a_valid_string ($mac) 
                     || !is_a_valid_string ($distro))) {
    die "ERROR: Invalid argument for the addition of a new VM";
}

if (defined $remove && !is_a_valid_string ($remove)) {
    die "ERROR: Invalid VM name";
 }

if (defined $deploy && (!is_a_valid_string ($hostos)
                     || !is_a_valid_string ($techno)
                     || !is_a_valid_string ($mac))) {
    die "ERROR: Invalid deployment parameters";
}

#
# We initialize OSCAR-V just to be sure everything is fine (if the 
# initialization has been done before, this does nothing)...
#

if (OSCAR::VirtualCluster::init_oscarv ($verbose)) {
    die "ERROR: Impossible to initialize OSCAR-V";
}

#
# Now that we now we are good to go, we start the work...
#

if ($add_image) {
    if (OSCAR::VirtualCluster::add_vm_image ($add_image, $distro)) {
        die "ERROR: Impossible to store VM image data";
    }
}

if ($add) {
    OSCAR::Logger::oscar_log_section ("Adding a new VM ($add)");
    if (OSCAR::VirtualCluster::add_vm_image ($add, $distro)) {
        die "ERROR: Impossible to store VM image data";
    }
    if ($hostos) {
        if (OSCAR::VirtualCluster::assign_vm_to_hostos ($add,
                                                        $hostos,
                                                        $verbose)) {
            die "ERROR: Impossible to assign the HostOS ($add, $hostos)";
        }
    }
}

if ($remove) {
    OSCAR::Logger::oscar_log_section ("Removing a VM ($remove)");
}

if ($update) {
    OSCAR::Logger::oscar_log_section ("Updating a VM ($update)");
}

if ($deploy) {
    # Note that we do not check if everything is ready for the deployment of
    # the VM, we currently assume everything is fine. 
    # TODO: we should check the host OS is ready and so on, but we need to
    # have OPM/NEST to ease that task.

    my %vm_info = (
        name => '$deploy',
        memory => '512',
        disk_image => '/tmp/$deploy.img',
        techno => '$techno',
    );
    # First we create a profile
    require OSCAR::VirtualCluster;
    if (OSCAR::VirtualCluster::generate_v2m_profile (\%vm_info)) {
        die "ERROR: Impossible to generate the V2M profile";
    }

    die "Stop";
    # Then we copy the profile on the remote machine.
    OSCAR::VirtualCluster::deploy_virtual_cluster ("lo");
}

exit 0;

sub help {
    print "Usage: $0 OPTION\n";
    print "\n";
    print "Setup virtual machines via OSCAR.\n";
    print "OPTION can be:\n";
    print "    add <VM_ID>:             Add a new virtual machine.\n";
    print "    remove <VM_ID>:          Remove a virtual machine.\n";
    print "    update <VM_ID>:          Update a virtual machine.\n";
    print "    deploy <VM_ID>:          Deploy a virtual machine.\n";
    print "    mac <MAC_ADDRESS>:       Specify a MAC address (must be used when deploying a virutal machine)\n";
    print "    distro <DISTRO_ID>:      Linux distribution used for the VM (must be used when adding a virutal machine)\n";
    print "    hostos <IP|LOCALHOST>    Specify the HostOS where the VM should be deployed";
    print "    techno <XEN|KVM|QEMU>    Specify the virtualization solution that should be used to deploy a given MV";
    print "    help:                    Display this help\n";
    print "\n";
}

sub help_and_exit_error {
    help ();
    exit 1;
}

sub help_and_exit_success {
    help ();
    exit 0;
}

__END__

=head1 DESCRIPTION

Setup virtual machines via OSCAR. The deployment of a virtual machine using
OSCAR-V is composed by 3 steps: 1) an image has to be created, 2) VMs have to
be assigned to a given image and VMs' characteristics such as the MAC address,
and 3) the actual deployment of the VMs.

=head1 USAGE

=over 8

oscar-v OPTION

=back

OPTION can be:

=item --add_image <image_name>

Add a new image for virtual machines. The "distro" option must be used at the
same time.

=item --add-vm <VM_ID>

Add a new virtual machine.

=item --remove-vm <VM_ID>

Remove a virtual machine.

=item --update-vm <VM_ID>

Update a virtual machine.

=item --mac <MAC_ADDRESS>

Sepcify a MAC address (must be used when adding a virutal machine).

=item --distro <DISTRO_ID>

Linux distribution used for the VM (must be used when adding a virutal machine).

=item --help

Display this help.

=head1 EXAMPLES

=item Creation of the "my_vm" virtual machine:

=over 8

sudo oscar-v --add my_vm --distro ubuntu-7-i386

=back

=item Deployment of the "my_vm" virtual machine:

=over 8

sudo oscar-v --deploy my_vm --hostos localhost --techno KVM --mac 00:01:02:02:01:00 

=back

=head1 AUTHOR

=item Geoffroy Vallee, Oak Ridge National Laboratory
