<!DOCTYPE article PUBLIC " -//OASIS//DTD DocBook V3.1//EN" "http://oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<article class="whitepaper" id="documentation" lang="en">

<artheader> <title>Systeminstaller-oscar Manual</title>

<author>

<firstname>Geoffroy</firstname>
<surname>Vallee</surname>

<affiliation>
<address><email>valleegr@ornl.gov</email></address>
</affiliation>
</author>

</artheader>

<sect1><title>Introduction</title>

</sect1>

<sect1><title>Interaction with OSCAR Repository Manager</title>
  <para>
    SystemInstaller aims to create system images that can be used for
    deployment (initially with SystemImager). Two major improvements have been
    made over time for OSCAR:
    <orderedlist>
      <listitem>
        SystemInstaller is able to use the OSCAR Repository Manager (ORM), and 
        therefore ultimately PackMan (ORM is based on PackMan), the binary 
        package manager specific to OSCAR (PackMan is actually an abstraction of
        the underlying binary package management system, e.g., apt or yum).
      </listitem>
      <listitem>
        SystemInstaller has the notion of Linux distribution identifier which
        are used by OSCAR to get configuration information about a given Linux
        distribution (for instance, it is possible to know which repositories
        have to be used for the management of binary packages).
      </listitem>
    </orderedlist>
  </para>

  <para>
    For the creation of an image, users can for instance do the following:
<programlisting>
  <![CDATA[
mksiimage -A --name oscarimage --distro ubuntu-7-i386 --filename /usr/share/oscar/oscarsamples/pkglists/debian-4-i386.pkglist --arch i386 --path /var/libsystemimager/images/oscarimage
           ]]>
</programlisting>
    This command will automatically create an image for ubuntu-7 (a.k.a. ubuntu
    7.10) in /var/libsystemimager/images/oscarimage) with the list of default
    binary packages from the list /usr/share/oscar/oscarsamples/pkglists/debian-4-i386.pkglist
  </para>
  <para>
    For that, systeminstaller actually creates a ORM object for the usage of
    OSCAR repositories. This object is created with the Linux distribution
    identifier (i.e., ubuntu-7-i386) and then used to install binary packages
    listed in /usr/share/oscar/oscarsamples/pkglists/debian-4-i386.pkglist. For the
    installation of binary packages, ORM actually calls PackMan, which also
    means that the image is automatically bootstrapped by PackMan and then
    binary packages from /usr/share/oscar/oscarsamples/pkglists/debian-4-i386.pkglist
    installed.
  </para>
  <para>
    Finally, systeminstaller performs a post image creation action: it adds all
    the files and information needed by SystemImager for the deployment of the
    image (and its configuration after deployment via SystemConfigurator).
  </para>
</sect1>

<sect1><title>Extension to Other Provisioning Systems</title>
  <para>
    As we saw in the previous section, SystemInstaller actually the image 
    bootstrapping and the installation of binary packages to ORM and ultimately
    to PackMan. It also clear that the SystemImager specific phase is only there
    to tune to created image so it could be deployed by SystemImager.
  </para>
  <para>
    Based on this constat, it also clear that if you can switch from the
    SystemImager post image creation mechanism to another mechanism suitable for
    another provisioning tool (such as Perceus), it is possible to use 
    SystemInstaller outside of SIS, i.e., without SystemImager.
  </para>
  <para>
    One solution to do so is to implement a framework that allows users to
    switch between different provisioning system. For a given provisioning
    system, SystemInstaller developers only need to develop a 
    <emphasis>backend</emphasis> that will implement the post image creation
    phase (which is very specific to the provisioning system).
  </para>
</sect1>

</article>

