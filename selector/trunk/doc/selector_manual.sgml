<!DOCTYPE article PUBLIC " -//OASIS//DTD DocBook V3.1//EN" "http://oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<article class="whitepaper" id="documentation" lang="en">

<artheader> <title>OSCAR Selector Manual</title>

<author>

<firstname>Geoffroy</firstname>
<surname>Vallee</surname>

<affiliation>
<address><email>valleegr@ornl.gov</email></address>
</affiliation>
</author>

</artheader>

<sect1><title>Introduction</title>

<para>
  User front-end for the selection of OSCAR packages that needs to be installed.
  It means that Selector is only in charge of providing a user interface for
  such selection and storing the selection data via ODA. It does 
  <emphasis>not</emphasis> actually track package installation status.
  For that, Selector is actually based on the notion of <emphasis>package 
  sets</emphasis>, which is a list of OSCAR packages.
</para>
<para>
  Based on the idea the user tries to a cluster that may have different
  partitions, each <emphasis>partitions</emphasis> could be based on
  different Linux distributions; the headnode and compute nodes may be on
  different Linux distributions, each distribution may have different package
  sets, so Selector must check that the final configuration is coherent (the
  OPKGs that need to installed on a given partition have the server side
  available for the headnode).
</para>

<para>
  Repositories for OSCAR packages can be local or online. Selector does not
  actually need to manage those repository, we only assume that the list of
  repositories for a given Linux distribution are defined in the OSCAR 
  repository configuration file (e.g., /tftpboot/distro/debian-4-x86_64.url).
</para>

</sect1>

<sect1><title>Selector and OSCAR Repositories</title>
  <para>
    Selector assumes that all OSCAR packages are available via binary packages 
    available on OSCAR repositories. Those OSCAR repositories can be local or
    remote.
  </para>
  <para>
    Selector does not actually need to know anything about the underlying OSCAR
    repository: when a list of OSCAR packages are selected from a package set,
    the package set is associated to a Linux distribution and that Linux 
    distribution is set up for the usage of a set of OSCAR repositories. In
    other terms, Selector only needs to deal with user input, the management of
    OSCAR repositories and the handling of binary packages is performed by the 
    OSCAR Repository Manager (ORM) at a later time.
  </para>
</sect1>

<sect1><title>Package Sets and OSCAR Packages</title>

  <sect2><title>Introduction</title>
    <para>
      The notion of package set is actually not a mechanism of Selector. Package
      sets define which OSCAR packages are supported on a given Linux
      distribution (at least core OSCAR packages must be available). The actual
      implementation of the package set mechanism is actually not important for
      Selector which is using a pre-defined API for the usage of package sets.
      This API is defined in OSCAR::PackageSet.
    </para>
  </sect2>

  <sect2><title>Package Set and OSCAR Packages Selection</title>
    <para>
      Before the actual selection of OSCAR packages, users need to select a
      package set. The package sets define: the Linux distribution and the list
      of available OSCAR packages (those two being linked). The Linux
      distribution will also implies a set of repositories which can be local or
      remote (for more details about the configuration of OSCAR repositories,
      please refer to the OSCAR Repository Manager tool - ORM).
    </para>
    <para>
      When the package set has been selected, the list of available OPKGs is
      displayed. For that, depending on the nature of the associated 
      repositories which can be local or global.
    </para>
  </sect2>

  <sect2><title>Package Set Management</title>
    <para>
      Package sets are currently a fairly static configuration of OSCAR
      packages: a package set is typically a directory where files give the list 
      of OSCAR package for a given Linux distribution. The 
      <programlisting>
      <![CDATA[
http://svn.oscar.openclustergroup.org/trac/oscar/browser/trunk/share/package_sets/Default
        ]]>
      </programlisting>
      directory shows the list of files defining the "Default"
      package set for various Linux distributions.
    </para>
    <para>
       Because a package set is finally only a set of OSCAR packages, users may
       want to create new package sets, each package set being a specific
       configuration of a cluster. For that, standard operations such as package
       set copy, union, intersection should be available, in order to ease the
       management of package sets.
    </para>
  </sect2>

  <sect2><title>Selection Storage</title>
    <para>
      The OPKG selection defined the software configuration of a given cluster.
      This configuration is stored into the OSCAR database via ODA. For that, a
      specific API is available: ???.
    </para>
    <para>
      This API is based on the fact that:
      <orderedlist>
        <listitem>
          The cluster is composed of <emphasis>two node groups</emphasis>: the
          headnode and compute nodes. We assume ODA already has information
          about those two groups.
        </listitem>
        <listitem>
          The selected OPKGs from a package set impacts the cluster
          configuration in two ways: the server side of OSCAR packages must be
          installed on the headnode, the client side on compute nodes. Even if 
          Selector does not have to deal with package installation or
          configuration, it means that the list of selected OPKGs has to be
          stored for both the headnode and compute nodes as <emphasis>selected
          OPKGs</emphasis>. It is <emphasis>not</emphasis> possible for a user
          to select the server-side only or the client-side only of an OSCAR
          package.
        </listitem>
      </orderedlist>
    </para>
  </sect2>

</sect1>

<sect1><title>Selector Implementation</title>
  <sect2><title>Installation</title>
    <sect3><title>From Sources</title>
    </sect3>
    <sect3><title>Using Binary Packages</title>
    </sect3>
  </sect2>
  <sect2><title>Packaging</title>
    <sect3><title>RPM</title>
    </sect3>
    <sect3><title>Debian Package</title>
    </sect3>
  </sect2>
</sect1>

<sect1><title>Conclusion</title>
</sect1>

<sect1><title>TODO</title>
  <itemizedlist>
    <listitem>
      Give more details about the implementation, but we need to revisit the
      implementation first.
    </listitem>
    <listitem>
      Give more details about the ODA API in order to store selection data.
    </listitem>
  </itemizedlist>
</sect1>

</article>

