<!DOCTYPE article PUBLIC " -//OASIS//DTD DocBook V3.1//EN" "http://oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<article class="whitepaper" id="documentation" lang="en">

<artheader> <title>libV3M - Developer Manual</title>

<author>

<firstname>Geoffroy</firstname>
<surname>Vallee</surname>

<affiliation>
<address><email>valleegr@ornl.gov</email></address>
</affiliation>
</author>

</artheader>

<sect1><title>Installation from SVN</title>
  <para>
    In order to check the code out from the SVN server, execute the following 
    command:
    <programlisting>
      <![CDATA[
        svn co https://svn.oscar.openclustergroup.org/svn/oscar/pkgsrc/libv3m-v2m
        ]]>
    </programlisting>
    Go into the directory associated to the version of libv3m you want to
    install (trunk for instance) and execute:
    <programlisting>
      <![CDATA[
               ./autogen.sh && ./configure && make && sudo make install && sudo make install-etc
        ]]>
    </programlisting>
    Now libv3m is installed on your system. Now, in order to install v2m, go in 
    the libv3m-v2m/tools/v2m directory, then into the directory associated to the 
    version of v2m you want to install and execute:
    <programlisting>
      <![CDATA[
               ./autogen.sh && ./configure && && make get-binaries make && sudo make install
        ]]>
    </programlisting>
  </para>
</sect1>

<sect1><title>Virtual Machine Monitoring</title>

<para>
The monitoring of virtual machine implies few constraints:
  <itemizedlist>
    <listitem>
        <para>
            be able to identify in a unique way virtual machines (including be
            able to detect virtual machine reboot),
        </para>
    </listitem>
    <listitem>
        <para>
            based on this unique id, be able to get in a generic format the 
            virtual machine status.
        </para>
    </listitem>
  </itemizedlist>
</para>
</sect1>

<sect1><title>Unique Virtual Machine Identifier</title>

<para>
Qemu: process ID?

Xen: VM name + domain ID (available through xm).
</para>

</sect1>

<sect1><title>Output Parsing From External Processes</title>

<para>
Virtualization solutions very often provide virtual machine monitoring tools
(e.g. the xm command for Xen). It is therefore necessary to have a mechanism
to catch the process output. For that, the PSTREAM library has been included
into libv3m. This library must always be used to get output from external 
tools.
</para>


</sect1>

</article>

